- name: Ensure dirs
  file: 
    path: "{{ item }}"
    state: directory
    mode: "0755"
    owner: ansible
    group: sysadmin
  loop: ["{{ apps_root }}", "{{ rendered_dir }}", "{{ sets_dir }}"]
  become: true

- name: Sync app repos
  ansible.builtin.git:
    repo: "{{ item.repo | default('git@github.com:gbwebdev/gbweb-public-apps--' ~ item.name ~ '.git', true)}}"
    dest: "{{ apps_root ~ '/' ~ item.id | default(item.name) }}"
    version: "{{ item.ref }}"
    force: yes
  loop: "{{ apps }}"
  loop_control:
    label: "{{ item.name }}"

- name: Deploy compose
  community.docker.docker_compose_v2:
    project_src: "{{ apps_root ~ '/' ~ (item.id | default(item.name)) ~ '/deploy/compose/' }}"
    files:
      - base/compose.yml
      - "{{ inventory_hostname ~ '/compose.override.yml' }}"
    project_name: "{{ item.id | default(item.name) }}"
    state: present
    pull: always
  loop: "{{ apps }}"
  loop_control: { label: "{{ item.name }}" }


- name: Generate and apply HostEndpoints from Docker networks
  command: python3 /usr/local/bin/docker_netpol_heps.py {{ inventory_hostname }} --apply --output-dir {{ rendered_dir }}
  register: hep_result
  changed_when: "'applied' in hep_result.stdout"

- name: Show HostEndpoint application results
  debug:
    var: hep_result.stdout_lines
  register: hep_apply


- name: Build calico manifests with kustomize
  ansible.builtin.command:
    cmd: kustomize build .
    chdir: "{{ apps_root ~ '/' ~ (item.id | default(item.name)) ~ '/deploy/calico/' ~ inventory_hostname }}"
  register: kustomized_output
  loop: "{{ apps }}"
  loop_control:
    label: "{{ item.name }}"

- name: Apply policies with calicoctl (containerized)
  ansible.builtin.shell: |
    cd /etc/manifests/docker-compose/system/calico && \
    echo "{{ item.stdout }}" | \
    docker compose run --rm -T calicoctl \
      apply -f - --allow-version-mismatch
  args:
    executable: /bin/bash
  loop: "{{ kustomized_output.results }}"
  loop_control:
    label: "{{ item.item.name }}"
